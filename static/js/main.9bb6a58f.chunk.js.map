{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/addons/WidgetWeather.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignedInLinks","className","to","SignedOutLinks","WidgetWeather","props","myRef","React","createRef","state","allData","undefined","city","countryCode","temperature","weather","title","description","icon","M","window","FloatingActionButton","init","this","myInput","direction","hoverEnabled","options","alignment","coverTrigger","constrainWidth","elems","document","querySelectorAll","Dropdown","toCelsius","temp","Math","floor","fetch","weather_resp","json","weather_data","console","log","data","setState","sys","country","main","id","ok","statusText","Error","Component","WeatherCard","data-target","Navbar","Notifications","ProjectSummary","project","ProjectList","projects","map","key","Dashboard","connect","ProjectDetails","match","params","SignIn","email","password","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","htmlFor","type","onChange","SignUp","firstName","lastName","CreateProject","content","createProject","dispatch","getState","getFirebase","getFireStore","App","basename","exact","path","component","Boolean","location","hostname","initState","authReducer","projectReducer","action","rootReducer","combineReducers","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirestore","reduxFirestore","fbConfig","rrfProps","config","createFirestoreInstance","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9bb6a58f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedInLinks = () => {\r\n   return (\r\n      <div>\r\n         <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><NavLink to='/'>Log Out</NavLink></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">TK</NavLink></li>\r\n         </ul>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SignedInLinks;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n   return (\r\n      <div>\r\n         <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n         </ul>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SignedOutLinks;","import React, { Component } from 'react'\r\n// import M from '../../../node_modules/materialize-css/dist/js/materialize';\r\n// import M from 'materialize-css'; or use M in window\r\n\r\nclass WidgetWeather extends Component {\r\n   constructor (props) {\r\n      super(props);\r\n      this.myRef = React.createRef();\r\n      this.state = {\r\n         allData: undefined,\r\n         city: \"Kuala Lumpur\",\r\n         countryCode: undefined,\r\n         temperature: undefined,\r\n         weather: {\r\n            title: undefined,\r\n            description: undefined,\r\n            icon: undefined\r\n         }\r\n      }\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const M = window.M;\r\n      // console.log(\"tk it mounted\",window);\r\n      // M.AutoInit();\r\n\r\n      //js way:\r\n      // document.addEventListener('DOMContentLoaded', function() {\r\n      //    let elems = document.querySelectorAll('.fixed-action-btn');\r\n      //    let instances = M.FloatingActionButton.init(elems, {\r\n      //       direction: 'left',\r\n      //       hoverEnabled: false\r\n      //     });\r\n      //  });\r\n\r\n      //react-way (using ref)\r\n      M.FloatingActionButton.init(this.myInput, {\r\n         direction: 'left',\r\n         hoverEnabled: false\r\n      });\r\n\r\n      let options = {\r\n         // inDuration: 300,\r\n         // outDuration: 225,\r\n         alignment: \"right\",\r\n         coverTrigger: true,\r\n         constrainWidth: false\r\n      };\r\n\r\n      let elems = document.querySelectorAll('.dropdown-trigger');\r\n      M.Dropdown.init(elems, options);\r\n\r\n\r\n      const API_KEY = \"test429736441cf3572838aa10530929f7cd\";\r\n\r\n      // calc kel to Celc method\r\n      let toCelsius = (temp) => {\r\n         let cel = Math.floor(temp - 273.15)\r\n         return cel\r\n      };\r\n\r\n      //async await function\r\n      try {\r\n         const weather_resp = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_KEY}`)\r\n         const weather_data = await weather_resp.json()\r\n         console.log(\"tk did mount async way\", weather_data);\r\n         let data = weather_data //just for syntatic sugar \r\n         this.setState({\r\n            allData: data,\r\n            countryCode: data.sys.country,\r\n            temperature: toCelsius(data.main.temp),\r\n            weather: {\r\n               id: data.weather[0].id,\r\n               title: data.weather[0].main,\r\n               description: data.weather[0].description,\r\n               icon: data.weather[0].icon\r\n            }\r\n         })\r\n         console.log(\"tk temp is\", this.state.temperature);\r\n\r\n         if (!weather_resp.ok) {\r\n            console.log(\"tk weatherResp:\", weather_resp.statusText); //\"statusText\" available when on fetch request\r\n            throw Error(weather_resp.statusText);\r\n         }\r\n      } catch (error) {\r\n         console.log(\"tk catch err \", error);\r\n      }\r\n   }\r\n\r\n   render() {\r\n      //api key here\r\n\r\n\r\n      //fetch pure method\r\n      // fetch(`http://api.openweathermap.org/data/2.5/weather?q=london&appid=${API_KEY}`)\r\n      // .then(function(response){\r\n      //    // console.log(response); \r\n      //    return response.json();\r\n      // }).then(function(data){\r\n      //    console.log(\"tk dta\",data);\r\n      // }).catch(function(error){\r\n      //    console.log(\"Tk error\",error);\r\n      // });\r\n\r\n      //fetch (arrow func)\r\n      // fetch(`http://api.openweathermap.org/data/2.5/weather?q=london&appid=${API_KEY}`)\r\n      // .then(response => response.json())\r\n      // .then(data => console.log(data))\r\n      // .catch((error) => {\r\n      //    console.log(\"There was an error\", error);\r\n      // });\r\n\r\n      //async await function (trigger method)\r\n      // async function AsyGetWeather(place) { \r\n      //    const weather_response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${place}&appid=${API_KEY}`);\r\n      //    const weather_json = await weather_response.json();\r\n      //    console.log(\"tk fn asyn way\", weather_json);\r\n      // }\r\n      // AsyGetWeather(\"africa\");\r\n\r\n      return (\r\n         <ul>\r\n            <WeatherCard />\r\n         </ul>\r\n      )\r\n   }\r\n}\r\n\r\nexport default WidgetWeather;\r\n\r\n\r\nconst WeatherCard = () => {\r\n   return (\r\n      <div className=\"card-wrapper right\">\r\n         <div className='dropdown-trigger btn' data-target='dropdown1'>W</div> {/*was anchor tag with href*/}\r\n         {/* <!-- Dropdown Structure --> */}\r\n         <ul id='dropdown1' className='dropdown-content'>\r\n            <div className=\"small weather-widget\">\r\n               <div className=\"card blue-grey darken-1 m-0\">\r\n                  <div className=\"card-content white-text\">\r\n                     <div className=\"top-row\">\r\n                        <div className=\"top-left\">4:15px</div>\r\n                        <div className=\"top-right\">right</div>\r\n                     </div>\r\n                     <div className=\"card-title center-align\">Icon</div>\r\n                     <div className=\"card-title center-align\">37<span>&#176;</span></div>\r\n                     <div className=\"card-title text-location center-align \">Kuala Lumpur,&nbsp;<span>MY</span></div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </ul>\r\n      </div>\r\n   )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport WidgetWeather from '../addons/WidgetWeather'\r\n\r\nconst Navbar = () => {\r\n   return (\r\n      <nav className=\"nav-wrapper grey darken-3\">\r\n         <div className=\"container\">\r\n            <Link to='/' className=\"brand-logo\">My Awesome App</Link>\r\n            <SignedInLinks />\r\n            <SignedOutLinks />\r\n            {/* //widget here */}\r\n            <WidgetWeather />\r\n         </div>\r\n      </nav>\r\n   )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Notifications = () => {\r\n   return (\r\n      <div>\r\n         <p>Notification</p>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n   return (\r\n      <div className=\"card z-depth-0 project-summary\">\r\n         <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>Posted by Professor Oak</p>\r\n            <p className=\"grey-text\">3rd of September, 2am</p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n   return (\r\n      <div className=\"project-list section\">\r\n         {projects && projects.map(project => {\r\n            return (\r\n               <ProjectSummary project={project} key={project.id} />\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../project/ProjectList'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Dashboard extends Component {\r\n   render() {\r\n      // console.log(\"tk stateProps\", this.props);\r\n      const { projects } = this.props; // from mapState\r\n      return (\r\n         <div className=\"dashboard container\">\r\n            <div className=\"row\">\r\n               <div className=\"col s12 m6\">\r\n                  <ProjectList projects={projects} />\r\n               </div>\r\n               <div className=\"col s12 m5 offset-m1\">\r\n                  <Notifications />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      projects: state.project.projects\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React from 'react'\r\n\r\nconst ProjectDetails = (props) => {\r\n   const id = props.match.params.id;\r\n\r\n   return (\r\n      <div className=\"container section project-details\">\r\n         <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n               <span className=\"card-title\">Project Title - {id}</span>\r\n               <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint vero modi deserunt iste facere repudiandae! Molestias impedit eius nam doloribus rerum nulla expedita. Deserunt saepe error, quaerat laudantium qui magni!</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n               <div>Posted by Professor Oak</div>\r\n               <div>2nd September, 2am</div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProjectDetails","import React, { Component } from 'react'\r\n\r\nexport class SignIn extends Component {\r\n   state = {\r\n      email: '',\r\n      password: ''\r\n   }\r\n   handleChange = (e) => {\r\n      //nice dry way\r\n      this.setState({\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(this.state);\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n               <h5 className=\"grey-text text-darken-3\">Sign in</h5>\r\n               <div className=\"input-field\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n               </div>\r\n               <div className=\"input-field\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n               </div>\r\n               <div className=\"input-field\">\r\n                  <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SignIn\r\n","import React, { Component } from 'react'\r\n\r\nexport class SignUp extends Component {\r\n   state = {\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: ''\r\n   }\r\n   handleChange = (e) => {\r\n      //nice dry way\r\n      this.setState({\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(this.state);\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n               <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n               <div className=\"input-field\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n               </div>\r\n               <div className=\"input-field\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n               </div>\r\n               <div className=\"input-field\">\r\n                  <label htmlFor=\"firstName\">First Name</label>\r\n                  <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n               </div>\r\n               <div className=\"input-field\">\r\n                  <label htmlFor=\"lastName\">Last Name</label>\r\n                  <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n               </div>\r\n               <div className=\"input-field\">\r\n                  <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SignUp\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\n\r\nexport class CreateProject extends Component {\r\n   state = {\r\n      title: '',\r\n      content: ''\r\n   }\r\n   handleChange = (e) => {\r\n      //nice dry way\r\n      this.setState({\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      // console.log(this.state);\r\n      this.props.createProject(this.state)\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n               <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n               <div className=\"input-field\">\r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n               </div>\r\n               <div className=\"input-field\">\r\n                  <label htmlFor=\"content\">Project Content</label>\r\n                  <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n               </div>\r\n               <div className=\"input-field\">\r\n                  <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n   return (dispatch, getState, { getFirebase, getFireStore }) => { //3rd param from thunks' withExtraArgument\r\n      //make async call to database\r\n      dispatch({\r\n         type: 'CREATE_PROJECT',\r\n         project: project //payload\r\n      })\r\n   }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/project/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\n\nclass App extends Component {\n   render() {\n      return (\n         <BrowserRouter\n            basename=\"/awesome-app-1\"> {/*temp added baseName*/}\n            <div className=\"App\">\n               <Navbar />\n               <Switch>\n                  <Route exact path='/' component={Dashboard} />\n                  <Route path='/project/:id' component={ProjectDetails} />\n                  <Route path='/signin' component={SignIn} />\n                  <Route path='/signup' component={SignUp} />\n                  <Route path='/create' component={CreateProject} />\n               </Switch>\n            </div>\n         </BrowserRouter>\n      );\n   }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n   // [::1] is the IPv6 localhost address.\n   window.location.hostname === '[::1]' ||\n   // 127.0.0.0/8 are considered localhost for IPv4.\n   window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n   )\n);\n\nexport function register(config) {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n         return;\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n         if (isLocalhost) {\n            // This is running on localhost. Let's check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl, config);\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                  'worker. To learn more, visit https://bit.ly/CRA-PWA'\n               );\n            });\n         } else {\n            // Is not localhost. Just register service worker\n            registerValidSW(swUrl, config);\n         }\n      });\n   }\n}\n\nfunction registerValidSW(swUrl, config) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            if (installingWorker == null) {\n               return;\n            }\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the updated precached content has been fetched,\n                     // but the previous service worker will still serve the older\n                     // content until all client tabs are closed.\n                     console.log(\n                        'New content is available and will be used when all ' +\n                        'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                     );\n\n                     // Execute callback\n                     if (config && config.onUpdate) {\n                        config.onUpdate(registration);\n                     }\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n\n                     // Execute callback\n                     if (config && config.onSuccess) {\n                        config.onSuccess(registration);\n                     }\n                  }\n               }\n            };\n         };\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n   })\n      .then(response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         const contentType = response.headers.get('content-type');\n         if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n               registration.unregister().then(() => {\n                  window.location.reload();\n               });\n            });\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl, config);\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         );\n      });\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n         .then(registration => {\n            registration.unregister();\n         })\n         .catch(error => {\n            console.error(error.message);\n         });\n   }\n}\n","const initState = {}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n   return state\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n   projects: [\r\n      { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n      { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n      { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n   ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n   switch (action.type) {\r\n      case \"CREATE_PROJECT\":\r\n         console.log(\"created project\", action.project);\r\n   }\r\n   return state\r\n}\r\n\r\nexport default projectReducer","import authReducer from \"./authReducer\"\r\nimport projectReducer from \"./projectReducer\"\r\nimport { combineReducers } from 'redux'\r\n\r\n//those object are going to be states in our redux\r\nconst rootReducer = combineReducers({\r\n   auth: authReducer,\r\n   project: projectReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'  //only need stuff in its app directory\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n   apiKey: \"AIzaSyBafDHI-hM_a4TsLE3djj1-H7Hu6RfFZC0\", //dont worry about this being here. This just serves as an ID\r\n   authDomain: \"tk-awesome-app.firebaseapp.com\",\r\n   databaseURL: \"https://tk-awesome-app.firebaseio.com\",\r\n   projectId: \"tk-awesome-app\",\r\n   storageBucket: \"tk-awesome-app.appspot.com\",\r\n   messagingSenderId: \"388323270990\",\r\n   appId: \"1:388323270990:web:0391389a9289a1e1a6fe1f\",\r\n   measurementId: \"G-P0HPM4YHMN\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n//   firebase.analytics();\r\n//init firestore\r\n// firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import 'materialize-css/dist/css/materialize.min.css';(from node can call directly)\r\nimport './../node_modules/materialize-css/dist/css/materialize.min.css';\r\nimport 'materialize-css/dist/js/materialize.min';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducer/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\r\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\nimport firebase from 'firebase/app'\r\n\r\nconst store = createStore(rootReducer,\r\n   compose( //refer thunk & compose documentation\r\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })), //1st store enhancer\r\n      reduxFirestore(firebase, fbConfig), //2nd\r\n      // reactReduxFirebase(fbConfig) //3rd.. depreciated since firebase v3\r\n   )\r\n);\r\n\r\nconst rrfProps = {\r\n   firebase,\r\n   config: fbConfig,\r\n   dispatch: store.dispatch,\r\n   createFirestoreInstance // <- needed if using firestore\r\n}\r\n\r\nReactDOM.render(\r\n   <Provider store={store} >\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n         <App />\r\n      </ReactReduxFirebaseProvider>\r\n   </Provider>\r\n   , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}